// problem 02 Even Fibonacci numbers

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

// Stream -A Stream is like a list except that its elements are computed lazily .
// for more details please go to - https://www.scala-lang.org/docu/files/collections-api/collections_14.html

def onePlusTwo(a:Int,b:Int):Stream[Int] = a#::onePlusTwo(b,a+b)
val fibs = onePlusTwo(0,1).takeWhile(c => c <= 4000000)
val FibFrom = fibs.toList
val filtValue = FibFrom.filter(n => n % 2 == 0)
filtValue.reduce((n1,n2) => n1+n2)
