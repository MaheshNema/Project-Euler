Problem 09 - Special Pythagorean triplet

/*
A Pythagorean triplet is a set of three natural numbers, a < b < c, for which,

a2 + b2 = c2
For example, 32 + 42 = 9 + 16 = 25 = 52.

There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc. */

/**
  * Created by Mahesh Nema on 14-01-2017.
  */
object Euler09 extends App {
  def tripletForSum(sum:Int) ={
    val triplets = for(a <- (1 to sum).view;    // lazy collection
                       b <- 1 to sum-a;
                       c <- 1 to sum - a - b if (istriplet(a,b,c,sum))) yield(a,b,c)
    triplets.head
  }
  def istriplet(a:Int,b:Int,c:Int,sum:Int) ={
    math.sqrt(a*a + b*b ) == c && a < b && b < c && a + b + c == sum
  }
val answereTriplets = tripletForSum(1000)
  println(answereTriplets)
