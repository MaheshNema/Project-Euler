// problem 01 Multiples of 3 and 5
/*
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
 */

// until - Ex. (1 until 10) - Range(1,2,3,4,5,6,7,8,9)
// % -> Modulus operator finds the remainder after division of one number by another
// filter - filter returns all elements from a sequence that return true when your function/predicate is called
// sum -> Sum the value of List/Array

val NaturalNum = 1 until 1000

val Num = NaturalNum.filter(n => n % 3 == 0 || n % 5 == 0)

val res = Num.sum
