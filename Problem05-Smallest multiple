// problem 05 - Smallest multiple
/*
2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
 */

def divisibleBy(Number:Int):Boolean ={
  (11 to 20).forall(Number % _ == 0)
}
val NaturalNumber = Stream.from(1)
val answer = NaturalNumber.find(divisibleBy(_))
println(answer


// Another way to do it by calculating LCM of value 1 to 20. its easy and more fast way to solve this problem.

def factor(number:Long):List[Long] = {
    val range = (2L to math.sqrt(number).toLong) // It gives you the square root values of given number
    val Nvalues = range.find(n => number % n == 0 ) // (Find return the value in term of Some(value)
    Nvalues match {
      case Some(d) => d :: factor(number / d)
      case None => List(number)
    }
  }
  def gcf(a:Long, b:Long):Long = {
  factor(a).intersect(factor(b)).product
}

def lcm(a:Long,b:Long):Long = {
  (a*b)/gcf(a,b)
}
val answere02 = (1 to 20).foldLeft(1L)((a,b) => lcm(a,b))
println(answere02)
